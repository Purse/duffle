#!/usr/bin/env node

'use strict';

const program = require('commander');
const parseCSV = require('../lib/parseCSV');
const apiRequest = require('../lib/api');

const initApi = (jwt) => {
  
};

program
  .version('0.0.1')
  .option('-a, --auth-token <jwt>', 'Your Purse JWT Auth Token');
  
program
  .command('create-orders <path>')
  .description('Creates a bulk list of orders from a CSV file')
  .action(async (path, options) => {
    let Api;
    try {
      Api = new apiRequest(options.parent.authToken);
    } catch (e) {
      console.log('*********************');
      console.log(e.message);
      console.log('*********************');
      return;
    }
    let parsedFile;
    try {
      parsedFile = await parseCSV(path);
    } catch (e) {
      console.log(e);
      return;
    }
    const bulkOrders = await Api.createBulkOrders(parsedFile);
    console.log(`${bulkOrders.successfulOrders.length} successful orders:`);
    console.log(`${JSON.stringify(bulkOrders.successfulOrders)}`);
    console.log(`${bulkOrders.failedOrders.length} failed orders:`);
    console.log(`${JSON.stringify(bulkOrders.failedOrders)}`);
  });
  
program
  .command('modify-orders <path>')
  .description('Modifies a bulk list of orders from a CSV file')
  .action(async (path, options) => {
    let Api;
    try {
      Api = new apiRequest(options.parent.authToken);
    } catch (e) {
      console.log('*********************');
      console.log(e.message);
      console.log('*********************');
      return;
    }
    let parsedFile;
    try {
      parsedFile = await parseCSV(path);
    } catch (e) {
      console.log(e);
      return;
    }
    const bulkModify = await Api.modifyBulkOrders(parsedFile);
    console.log(`${bulkModify.successfulOrders.length} successful orders:`);
    console.log(`${JSON.stringify(bulkModify.successfulOrders)}`);
    console.log(`${bulkModify.failedOrders.length} failed orders:`);
    console.log(`${JSON.stringify(bulkModify.failedOrders)}`);
  });
  
program
  .command('cancel-orders <path>')
  .description('Cancels a bulk list of orders from a CSV file');
  
program.parse(process.argv);
